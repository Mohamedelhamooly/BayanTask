// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'model.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 3757468012156699203),
      name: 'Person',
      lastPropertyId: const obx_int.IdUid(7, 1761546057949480095),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8710768565026035228),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 31908105088840931),
            name: 'age',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3720795110724824439),
            name: 'nationalityID',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 885398814594718056),
            name: 'birthDate',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 1761546057949480095),
            name: 'dbId',
            type: 6,
            flags: 1)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(2, 3757468012156699203),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [2802681814019499133],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        3178873177797362769,
        4285343053028527696,
        2606273611209948020,
        6451339597165131221,
        7877873290658901123,
        2738056424936223775
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    Person: obx_int.EntityDefinition<Person>(
        model: _entities[0],
        toOneRelations: (Person object) => [],
        toManyRelations: (Person object) => {},
        getId: (Person object) => object.dbId,
        setId: (Person object, int id) {
          object.dbId = id;
        },
        objectToFB: (Person object, fb.Builder fbb) {
          final nameOffset =
              object.name == null ? null : fbb.writeString(object.name!);
          final birthDateOffset = object.birthDate == null
              ? null
              : fbb.writeString(object.birthDate!);
          fbb.startTable(8);
          fbb.addOffset(2, nameOffset);
          fbb.addFloat64(3, object.age);
          fbb.addInt64(4, object.nationalityID);
          fbb.addOffset(5, birthDateOffset);
          fbb.addInt64(6, object.dbId);
          fbb.finish(fbb.endTable());
          return object.dbId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final dbIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final ageParam = const fb.Float64Reader()
              .vTableGetNullable(buffer, rootOffset, 10);
          final nationalityIDParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 12);
          final birthDateParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 14);
          final object = Person(
              dbId: dbIdParam,
              name: nameParam,
              age: ageParam,
              nationalityID: nationalityIDParam,
              birthDate: birthDateParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [Person] entity fields to define ObjectBox queries.
class Person_ {
  /// see [Person.name]
  static final name =
      obx.QueryStringProperty<Person>(_entities[0].properties[0]);

  /// see [Person.age]
  static final age =
      obx.QueryDoubleProperty<Person>(_entities[0].properties[1]);

  /// see [Person.nationalityID]
  static final nationalityID =
      obx.QueryIntegerProperty<Person>(_entities[0].properties[2]);

  /// see [Person.birthDate]
  static final birthDate =
      obx.QueryStringProperty<Person>(_entities[0].properties[3]);

  /// see [Person.dbId]
  static final dbId =
      obx.QueryIntegerProperty<Person>(_entities[0].properties[4]);
}
